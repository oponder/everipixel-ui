{"version":3,"file":"static/webpack/static/development/pages/index.js.7f0248789a1ca1058aca.hot-update.js","sources":["webpack:///./components/header.js","webpack:///./node_modules/copy-to-clipboard/index.js","webpack:///./node_modules/toggle-selection/index.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport copy from 'copy-to-clipboard';\n\nexport default function Header(props) {\n  let [privateKey, setPrivateKey] = useState(\"\");\n  let [createAccountToggle, setCreateAccountToggle] = useState(false);\n  let [createAccountPage, setCreateAccountPage] = useState(0);\n  let [loginToggle, setLoginToggle] = useState(false);\n\n  function toggleCreateAccount() {\n    setLoginToggle(false);\n    setCreateAccountPage(0);\n    setCreateAccountToggle(!createAccountToggle);\n  }\n\n  function toggleLogin() {\n    setCreateAccountToggle(false);\n    setLoginToggle(!loginToggle);\n  }\n\n  function advanceCreateAccount() {\n    (async () => {\n      let privateKey = await props.EVTWrapper.randomPrivateKey();\n      props.onLogin(privateKey);\n      setPrivateKey(privateKey);\n      setCreateAccountPage(2);\n    })();\n\n    setCreateAccountPage(1);\n  }\n\n  function copyToClipboard() {\n\n  }\n\n  function showCreateAccountPage() {\n    if (createAccountPage === 0) {\n      return <div>\n        <h3>Create Account  <a onClick={toggleCreateAccount} className=\"pullRight close\">[X]</a></h3>\n        <p>There is actually no such thing as creating an account! That's the beauty\n        of the blockchain. All you need is a private key. And the servers will never\n        see that private key.</p>\n\n        <p>Now, normally there is a wallet app that keeps these keys safe for you.\n        However, I've had some trouble integrating\n        Everitoken's app (called everiSigner). So for now, private key creation\n        is done by everiPixel itself.</p>\n\n        <p>While everiPixel is a prototype, this should be ok. But I do intend to use\n        something like everiSigner eventually to give you more confidence that your\n        private key is safe.</p>\n\n        <button className=\"primary\" onClick={advanceCreateAccount}>Continue and make me a private key!</button>\n      </div>\n    } else if (createAccountPage === 1){\n      return <div>\n        <h3>Creating Private Key</h3>\n        <p>Please wait a moment</p>\n      </div>\n    } else if (createAccountPage === 2) {\n      return <div>\n        <h3>Private Key Created! <a onClick={toggleCreateAccount} className=\"pullRight close\">[X]</a></h3>\n        <p>You are now logged in.</p>\n        <p>Please copy your private key to the clipboard and save it somewhere.</p>\n        <button class=\"primary\" onClick={copyToClipboard}>Copy your private key to the clipboard.</button>\n      </div>\n    }\n  }\n\n  function handlePrivateKeyChange(e) {\n    setPrivateKey(e.target.value);\n  }\n\n  function commitPrivateKey(e) {\n    e.preventDefault();\n    setLoginToggle(false);\n    props.onLogin(privateKey);\n  }\n\n  function logout() {\n    setPrivateKey(\"\");\n    var c = confirm(\"Are you sure you want to logout? Make sure you saved your private key somewhere, there's no way to recover it.\")\n    if (c) {\n      props.onLogout();\n    }\n  }\n\n  return <div className=\"header\">\n    <h1>everi<span>Pixel</span></h1>\n\n    <div className=\"user pullRight\">\n\n\n      {\n        props.loggedIn ?\n        <div>Logged in as: {props.loggedIn} | <a onClick={logout}>Logout</a></div>\n        :\n        <div><a onClick={toggleLogin}>Login</a> | <a onClick={toggleCreateAccount}>Create Account</a></div>\n      }\n\n      {\n        loginToggle ?\n          <div className=\"createAccount overlayWindow\">\n            <h3>Login <a onClick={toggleLogin} className=\"pullRight close\">[X]</a></h3>\n            <label>Private Key</label>\n            <form>\n              <input autoFocus type=\"text\" value={privateKey} onChange={handlePrivateKeyChange}/>\n              <button className=\"primary\" onClick={commitPrivateKey}>Save</button>\n            </form>\n          </div>\n        :\n          undefined\n      }\n\n      {\n        createAccountToggle ?\n          <div className=\"createAccount overlayWindow\">\n            {\n              showCreateAccountPage(createAccountPage)\n            }\n          </div>\n        :\n          undefined\n      }\n    </div>\n\n    <style jsx>\n      {`\n        h1 {\n          color: #858585;\n          font-size: 24px;\n          margin: 0;\n          display: inline;\n        }\n\n        h1 span {\n          color: #fff\n        }\n      `}\n    </style>\n  </div>\n}\n","'use strict';\n\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? 'âŒ˜' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug, message, reselectPrevious, range, selection, mark, success = false;\n  if (!options) { options = {}; }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement('span');\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = 'unset';\n    // prevents scrolling to the end of the page\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)';\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = 'pre';\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n\n    document.body.appendChild(mark);\n\n    range.selectNode(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand('copy');\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BA;AAAA;AAAA;AAAA;AAsDA;;;;;;;;;;;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}