{"version":3,"file":"static/webpack/static/development/pages/index.js.4354f715b6c50bd0d6e9.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Header from '../components/header';\nimport { Canvas } from '../components/canvas';\nimport Pizzicato  from 'pizzicato';\nimport { List } from 'react-virtualized';\nimport EVTWrapper from '../lib/evt';\n\nconst feathers = require('@feathersjs/feathers');\nconst socketio = require('@feathersjs/socketio-client');\nconst io = require('socket.io-client');\n\nconst WIDTH = 50;\nconst HEIGHT = 50;\nconst SCALE = 10;\n\nconst SERVERURL = \"http://35.240.173.157:8000\"\nconst EVTIP = \"35.240.176.101\"\n\nconst PALETTE = [\n                 '#FFFFFF', '#E4E4E4', '#888888', '#222222',\n                 '#FFA7D1', '#E50000', '#E59500', '#A06A42',\n                 '#E5D900', '#94E044', '#02BE01', '#00D3DD',\n                 '#0083C7', '#0000EA', '#CF6EE4', '#820080',\n                ];\n\nvar truncate = function (fullStr, strLen, separator) {\n  if (!fullStr) { return undefined };\n  if (fullStr.length <= strLen) return fullStr;\n\n  separator = separator || '...';\n\n  var sepLen = separator.length,\n      charsToShow = strLen - sepLen,\n      frontChars = Math.ceil(charsToShow/2),\n      backChars = Math.floor(charsToShow/2);\n\n  return fullStr.substr(0, frontChars) +\n         separator +\n         fullStr.substr(fullStr.length - backChars);\n};\n\nexport class Index extends Component {\n  constructor(props) {\n    super(props);\n\n    if (typeof window !== 'undefined') {\n      this.dragStartSound = new Pizzicato.Sound(\"/static/dragstart.mp3\");\n      this.draggingSound = new Pizzicato.Sound(\"/static/dragging.mp3\");\n      this.dragStopSound = new Pizzicato.Sound(\"/static/dragend.mp3\");\n      this.dragFailSound = new Pizzicato.Sound(\"/static/dragfail.mp3\");\n    }\n\n    this.EVTWrapper = new EVTWrapper({});\n\n    this.state = {\n      dragging: false,\n      selection: {},\n      currentMousePosition: {x: 0, y: 0, id: 0},\n      pixels: this.initializePixels(),\n      selectedColor: '',\n    }\n  }\n\n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.onEsc, false);\n    let privateKey =  localStorage.getItem('login');\n\n    if (privateKey) {\n      this.EVTWrapper = new EVTWrapper({privateKey});\n    }\n\n    (async () => {\n      let response = await fetch(SERVERURL + '/board', {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"GET\"\n      });\n\n      let body = await response.text();\n      body = JSON.parse(body);\n\n      body.board.map((pixel, i) => {\n        if (pixel) {\n          this.state.pixels[i].color = pixel;\n        } else {\n          this.state.pixels[i].color = \"#000\";\n        }\n      });\n\n      this.pixels = undefined;\n      this.forceUpdate();\n\n    })();\n\n    const socket = io(SERVERURL);\n    const app = feathers();\n    app.configure(socketio(socket));\n\n    app.service('board').on('status', message => {\n      this.state.pixels[message.id].color = message.color;\n      this.pixels = undefined;\n      this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.onEsc, false);\n  }\n\n  onEsc = (event) => {\n    if(event.keyCode === 27) {\n      this.clearSelection();\n    }\n  }\n\n  clearSelection = () => {\n    this.state.selection.selected = false;\n    this.pixels = undefined; //\n    this.setState({\n      selection: {},\n      currentMousePosition: {x: 0, y: 0, id: 0},\n    })\n  }\n\n  setMousePos = (pixel) => {\n    this.setState({\n      currentMousePosition: pixel\n    });\n  }\n\n  selectPixel = async (pixel) => {\n    this.dragStopSound.play();\n\n    this.state.selection.selected = false;\n\n    this.setState({\n      selection: pixel,\n      selectedColor: pixel.color\n    })\n\n    pixel.selected = true;\n\n    await this.refreshPixel(pixel);\n\n    this.pixels = undefined; // force redraw\n\n    this.setState({\n      pixels: this.state.pixels\n    })\n  }\n\n  refreshPixel = async (pixel) => {\n    var {err, response} = await this.EVTWrapper.getToken(\"pixeltoken\", pixel.id.toString());\n    if (err != null && err.name === \"tokendb_key_not_found\") {\n      pixel.available = true;\n      pixel.color = \"#000\";\n    } else if (err === null) {\n      let colorMetas = response.metas\n                      .filter(meta => meta.key.startsWith(\"color\"))\n                      .sort((a, b) => {\n                        let bN = parseInt(b.key.replace(\"color\", \"\"));\n                        let aN = parseInt(a.key.replace(\"color\", \"\"));\n                        if (isNaN(bN)) {\n                          return -1;\n                        }\n                        return bN - aN;\n                      });\n\n      pixel.owner = response.owner[0];\n\n      if (colorMetas[0]) {\n        pixel.color = colorMetas[0].value;\n      }\n    }\n  }\n\n  initializePixels = () => {\n    var pixels = [];\n\n    for(var y = 0; y < HEIGHT; y += 1) {\n      for(var x = 0; x < WIDTH; x += 1) {\n        var pixel = {x, y, color: \"#000\", id: ((y*WIDTH)+x).toString() };\n        pixels.push(pixel);\n      }\n    }\n\n    return pixels;\n  }\n\n  claimPixel = async (pixel) => {\n    let response = await fetch(SERVERURL + '/claim', {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\"id\": pixel.id, \"owner\": this.EVTWrapper.publicKey}),\n      method: \"POST\"\n    });\n\n    let body = await response.text();\n\n    if (response.status === 201) {\n      await this.refreshPixel(pixel);\n\n      this.pixels = undefined; // force redraw\n\n      this.setState({\n        pixels: this.state.pixels\n      })\n    }\n  }\n\n  selectColor = async (color) => {\n    this.state.selection.color = color;\n    this.pixels = undefined; // force redraw\n    this.setState({\n      selectedColor: color\n    });\n\n\n    var {err, response} = this.commitColor(color, this.state.selection.id);\n    if (err !== null) {\n      // Unable to set the color.\n    }\n  }\n\n  commitColor = async (color, pixelID) => {\n    var {err, response} = await this.EVTWrapper.getToken(\"pixeltoken\", pixelID);\n    if (err !== null) {\n      return {err, response}\n    }\n\n    let colorMetas = response.metas\n                    .filter(meta => meta.key.startsWith(\"color\"))\n                    .map(meta => parseInt(meta.key.replace(\"color\", \"\")))\n                    .filter(index => !isNaN(index))\n                    .sort((a, b) => b - a);\n\n    let nextColorIndex = isNaN(colorMetas[0]+1) ? 0 : colorMetas[0]+1;\n\n    var {err, response} = await this.EVTWrapper.addMeta(\"pixeltoken\", this.state.selection.id, 'color'+nextColorIndex, color);\n    if (err != null) {\n      // Error setting meta.\n    }\n\n    // Let hte server refresh it's state too.\n    await fetch(SERVERURL + '/board/'+pixelID.toString(), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"GET\"\n    });\n\n    return {err, response}\n  }\n\n  handleLogin = (privateKey) => {\n    this.EVTWrapper = new EVTWrapper({privateKey});\n    localStorage.setItem('login', privateKey);\n    this.forceUpdate();\n  }\n\n  handleLogout = () => {\n    this.EVTWrapper = new EVTWrapper({});\n    localStorage.removeItem('login');\n    this.forceUpdate();\n  }\n\n  render() {\n    this.pixels = this.pixels || this.state.pixels.map((pixel) => {\n      return <div\n        className={'pixel' + (pixel.selected ? ' selected' : '')}\n        key={pixel.id}\n        style={{\n          backgroundColor: pixel.color,\n          width:SCALE+\"px\",\n          height: SCALE+\"px\",\n          float: \"left\",\n          color: pixel.color,\n          fontSize: \"14px\"\n        }}\n        onMouseEnter={this.setMousePos.bind(this,pixel)}\n        onClick={this.selectPixel.bind(this,pixel)}\n      ></div>\n    });\n\n\n    return <div className=\"main\">\n      <Header\n        onLogin={this.handleLogin}\n        onLogout={this.handleLogout}\n        loggedIn={truncate(this.EVTWrapper.publicKey, 25, \"...\")}\n        EVTWrapper={this.EVTWrapper}\n      />\n\n      <div className=\"main\">\n        <div className=\"pixels\">\n          {\n            this.pixels\n          }\n          <style jsx>\n            {`\n              .pixels {\n                float: left;\n                margin-right: 10px;\n                width: ${SCALE * WIDTH}px;\n                border: 1px solid #222;\n                margin-bottom: 20px;\n              }\n            `}\n          </style>\n        </div>\n\n        <div className=\"controls\">\n          <div className={\"selection\" + (this.state.selection.x !== undefined ? \" selected\" : \"\")} >\n\n            <h2>\n              {\n                (this.state.selection.x !== undefined) ?\n                <div>\n                  Pixel #{this.state.selection.id}\n                </div>\n                :\n                <span>Pixel #{this.state.currentMousePosition.id}&nbsp;</span>\n              }\n            </h2>\n            {\n              (this.state.selection.x !== undefined) ?\n                <div>({this.state.selection.x},{this.state.selection.y})</div>\n                :\n              <div>({this.state.currentMousePosition.x},{this.state.currentMousePosition.y})</div>\n            }\n\n            {\n              (this.state.selection.x !== undefined) ?\n              <div className=\"owner\">\n                <br/>\n                <span>\n                  {\n                    this.state.selection.owner === undefined ?\n                      <div>\n\n                      </div>\n                      :\n                      \"Owner: \" + truncate(this.state.selection.owner, 25, \"...\")\n                  }\n                </span>\n              </div>\n              :\n              ''\n            }\n          </div>\n\n          <hr/>\n          {\n            this.state.selection.color ?\n              this.state.selection.owner === undefined ?\n                <div className=\"detail-box\">\n                  <h2>Nobody owns this pixel yet!</h2>\n                  <p>You can claim it for yourself and set it to any color you want!</p>\n                  {\n                    this.EVTWrapper.publicKey ?\n                      <button className=\"primary\" onClick={this.claimPixel.bind(this, this.state.selection)}>CLAIM PIXEL</button>\n                    :\n                      <div>Click login above or create account to claim this pixel!<br/><br/></div>\n                  }\n\n                  <button className=\"secondary\" onClick={this.clearSelection}>DESELECT [ESC]</button>\n                </div>\n              :\n                this.state.selection.owner === this.EVTWrapper.publicKey ?\n                  <div>\n                    You own this pixel!\n                    <div className=\"palette\">\n                      {PALETTE.map((color) => {\n                        var className = 'color-picker';\n                        if (color === this.state.selectedColor) {\n                          className += ' selected'\n                        }\n                        return <div key={color} className={className} style={{backgroundColor:color}} onClick={this.selectColor.bind(this, color)}></div>\n                      })}\n                    </div>\n                  </div>\n                :\n                  <div>\n                    {this.EVTWrapper.publicKey ? \"Someone else owns this pixel.\" : \"You are not logged in\"} <br /><br />\n                    <button className=\"secondary\" onClick={this.clearSelection}>DESELECT [ESC]</button>\n                  </div>\n            :\n            \"\"\n          }\n\n          <style jsx>\n            {`\n              .controls {\n                float: left;\n                color: #fff;\n                font-size: 16px;\n                width: 400px;\n              }\n\n              .selected {\n                color: #fff !important\n              }\n\n              .selectionPreview {\n                width: 100px;\n                height: 100px;\n                border: 1px solid #222222;\n                float: left;\n                margin-right: 20px;\n                margin-bottom: 10px;\n              }\n\n              .color-picker {\n                width: 20px;\n                height: 20px;\n                float: left;\n                display: box;\n                cursor: pointer;\n                margin-right: 2px;\n                opacity: 0.8;\n              }\n\n              .color-picker:hover, .color-picker.selected {\n                border-bottom: 4px solid #fff;\n                opacity: 1;\n              }\n\n              .palette {\n                margin-top: 10px\n              }\n\n              .selection {\n                color: #858585;\n              }\n\n              h2 {\n                font-size: 16px;\n                margin: 0;\n                margin-bottom: 10px;\n              }\n\n              hr {\n                clear: both;\n                border-color: #222\n              }\n\n              .owner span {\n\n              }\n\n              .detail-box {\n                font-family: system, -apple-system, system-ui;\n                color: #aaa;\n              }\n\n              .detail-box h2 {\n                color: #fff\n              }\n            `}\n          </style>\n\n        </div>\n        <div className=\"caption\">\n        <span>Attention:</span> everiPixel is a prototype running against a self hosted everiToken blockchain.\n        the state of the board could be cleared at any time.\n        </div>\n\n        <div className=\"explanation\">\n          <h2>What is this?</h2>\n          <p>everiPixel is a demonstration of everiToken's Non Fungible Token feature.</p>\n          <p>Above is a canvas of 50x50 pixels, each of which can be owned and transfered individually.</p>\n\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default Index\n"],"mappings":"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","sourceRoot":""}